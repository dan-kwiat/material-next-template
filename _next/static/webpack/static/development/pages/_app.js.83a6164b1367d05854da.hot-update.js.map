{"version":3,"file":"static/webpack/static/development/pages/_app.js.83a6164b1367d05854da.hot-update.js","sources":["webpack:///./components/Layout/AppBar.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport MaterialIcon from '@material/react-material-icon'\nimport TopAppBar, {\n  TopAppBarIcon,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n} from '@material/react-top-app-bar'\n\nconst Bar = ({\n  className,\n  title,\n  renderToggle,\n  fixed,\n}) => (\n  <TopAppBar className={className} fixed={fixed}>\n    <TopAppBarRow>\n      <TopAppBarSection align='start'>\n        {renderToggle ? (\n          <TopAppBarIcon navIcon tabIndex={0}>\n            {renderToggle()}\n          </TopAppBarIcon>\n        ) : null}\n        <TopAppBarTitle>{title}</TopAppBarTitle>\n      </TopAppBarSection>\n    </TopAppBarRow>\n  </TopAppBar>\n)\n\nconst AppBar = ({ isMobile, setIsDrawerOpen }) => (\n  isMobile ? (\n    <TopAppBar>\n      <TopAppBarRow>\n        <TopAppBarSection align='start'>\n          <MaterialIcon\n            hasRipple\n            icon='menu'\n            onClick={() => setIsDrawerOpen(true)}\n          />\n          <TopAppBarTitle>Mobile Title</TopAppBarTitle>\n        </TopAppBarSection>\n      </TopAppBarRow>\n    </TopAppBar>\n  ) : (\n    <TopAppBar>\n      <TopAppBarRow>\n        <TopAppBarSection align='start'>\n          <TopAppBarTitle>Desktop Title</TopAppBarTitle>\n        </TopAppBarSection>\n      </TopAppBarRow>\n    </TopAppBar>\n  )\n)\nAppBar.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nexport default AppBar\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AACA;AAmBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AACA;AAuBA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}