{"version":3,"file":"static/webpack/static/development/pages/_app.js.903b80a59f55901a6e03.hot-update.js","sources":["webpack:///./components/Drawer/DrawerList.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'next/router'\nimport List, {\n  ListItem,\n  ListItemGraphic,\n  ListItemText,\n  ListItemMeta,\n} from '@material/react-list'\nimport MaterialIcon from '@material/react-material-icon'\n\nconst PREFIX = process.env.HOME_ROUTE || ''\nconsole.log('PREFIX', PREFIX)\n\nconst NAV_LINKS = [\n  {\n    path: '/',\n    icon: 'home',\n    label: 'Home',\n  },\n  {\n    path: '/search',\n    icon: 'search',\n    label: 'Search',\n  },\n  {\n    path: '/settings',\n    icon: 'settings',\n    label: 'Settings',\n    meta: 'meta info',\n  },\n]\n\nconst DrawerList = ({ onItemClick, router }) => (\n  <List\n    tag=\"nav\"\n    singleSelection\n    selectedIndex={NAV_LINKS.findIndex(x => x.path === router.pathname)} // needs polyfill?\n  >\n    {NAV_LINKS.map(({ path, icon, label, meta }) => (\n      <ListItem\n        tag=\"a\"\n        key={path}\n        href={`${PREFIX}${path}`}\n        onClick={e => {\n          // could prefetch routes in componentDidMount?\n          e.preventDefault()\n          router.push(`${PREFIX}${path}`)\n          onItemClick()\n        }}\n      >\n        <ListItemGraphic graphic={<MaterialIcon icon={icon}/>} />\n        <ListItemText primaryText={label} />\n        <ListItemMeta meta={meta || ''} />\n      </ListItem>\n    ))}\n  </List>\n)\nDrawerList.propTypes = {\n  onItemClick: PropTypes.func.isRequired,\n}\n\nexport default withRouter(DrawerList)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AANA;AACA;AAwBA;AACA;AADA;AAIA;;;;;A","sourceRoot":""}