{"version":3,"file":"static/webpack/static/development/pages/index.js.55e3101d44acbd159c2a.hot-update.js","sources":["webpack:///./components/Drawer.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport NavDrawer, {\n  DrawerHeader,\n  DrawerSubtitle,\n  DrawerTitle,\n  DrawerContent,\n} from '@material/react-drawer'\nimport List, {\n  ListItem,\n  ListItemText,\n  ListItemGraphic,\n  ListItemMeta,\n} from '@material/react-list'\nimport MaterialIcon from '@material/react-material-icon'\n\nclass DrawerList extends React.Component {\n  state = {\n    selectedIndex: 0,\n  }\n  render() {\n    const { onItemClick } = this.props\n    return (\n      <List\n        singleSelection\n        selectedIndex={this.state.selectedIndex}\n        handleSelect={selectedIndex => this.setState({ selectedIndex })}\n      >\n        <ListItem onClick={onItemClick}>\n          <ListItemGraphic graphic={<MaterialIcon icon='home'/>} />\n          <ListItemText primaryText='Home' />\n        </ListItem>\n        <ListItem onClick={onItemClick}>\n          <ListItemGraphic graphic={<MaterialIcon icon='search'/>} />\n          <ListItemText primaryText='Search' />\n        </ListItem>\n        <ListItem onClick={onItemClick}>\n          <ListItemGraphic graphic={<MaterialIcon icon='settings'/>} />\n          <ListItemText primaryText='Settings' />\n          <ListItemMeta meta='meta info' />\n        </ListItem>\n      </List>\n    )\n  }\n}\nDrawerList.propTypes = {\n  onItemClick: PropTypes.func.isRequired,\n}\n\nconst DeviceAppropriateDrawer = ({ isOpen, setIsDrawerOpen, children }) => (\n  <>\n    <NavDrawer\n      className='permanent-drawer'\n    >\n      {children}\n    </NavDrawer>\n    <NavDrawer\n      className='modal-drawer'\n      modal\n      open={isOpen}\n      onOpen={() => setIsDrawerOpen(true)}\n      onClose={() => setIsDrawerOpen(false)}\n    >\n      {children}\n    </NavDrawer>\n    <style jsx>{`\n      @media (min-width: 840px) {\n        .modal-drawer {\n          display: none !important;\n        }\n      }\n      @media (max-width: 839px) {\n        .permanent-drawer {\n          display: none !important;\n        }\n      }\n    `}</style>\n  </>\n)\nDeviceAppropriateDrawer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nconst Drawer = props => (\n  <DeviceAppropriateDrawer {...props}>\n    <DrawerHeader>\n      <DrawerTitle>\n        Drawer Title\n      </DrawerTitle>\n      <DrawerSubtitle>\n        Drawer Subtitle\n      </DrawerSubtitle>\n    </DrawerHeader>\n    <DrawerContent>\n      <DrawerList\n        onItemClick={() => {\n          props.setIsDrawerOpen && props.setIsDrawerOpen(false)\n        }}\n      />\n      <a href='/'>plain link</a>\n    </DrawerContent>\n  </DeviceAppropriateDrawer>\n)\nDrawer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nexport default Drawer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA3BA;AACA;AA4BA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AACA;AA6BA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AACA;AAmBA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}