{"version":3,"file":"static/webpack/static/development/pages/_app.js.5878af80b38bb0e8aeac.hot-update.js","sources":["webpack:///./components/Layout/AppBar.js","webpack:///./components/Layout/Drawer/DeviceAppropriateDrawer.js","webpack:///./components/Layout/Drawer/DrawerList.js","webpack:///./components/Layout/Drawer/index.js","webpack:///./components/Layout/index.js","webpack:///./pages/_app.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport MaterialIcon from '@material/react-material-icon'\nimport TopAppBar, {\n  TopAppBarIcon,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n} from '@material/react-top-app-bar'\n\nconst Bar = ({\n  className,\n  title,\n  renderToggle,\n  fixed,\n}) => (\n  <TopAppBar className={className} fixed={fixed}>\n    <TopAppBarRow>\n      <TopAppBarSection align='start'>\n        {renderToggle ? (\n          <TopAppBarIcon navIcon tabIndex={0}>\n            {renderToggle()}\n          </TopAppBarIcon>\n        ) : null}\n        <TopAppBarTitle>{title}</TopAppBarTitle>\n      </TopAppBarSection>\n    </TopAppBarRow>\n  </TopAppBar>\n)\n\nconst AppBar = ({ setIsDrawerOpen }) => (\n  <>\n    <Bar\n      className='mobile-appbar'\n      title='Title'\n      renderToggle={() => (\n        <MaterialIcon\n          hasRipple\n          icon='menu'\n          onClick={() => setIsDrawerOpen(true)}\n        />\n      )}\n    />\n    <Bar\n      className='desktop-appbar'\n      title='Title'\n      fixed\n    />\n    <style jsx>{`\n      @media (min-width: 840px) {\n        .mobile-appbar {\n          display: none !important;\n        }\n      }\n      @media (max-width: 839px) {\n        .desktop-appbar {\n          display: none !important;\n        }\n      }\n    `}</style>\n  </>\n)\nAppBar.propTypes = {\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nexport default AppBar","import PropTypes from 'prop-types'\nimport NavDrawer from '@material/react-drawer'\n\nconst DeviceAppropriateDrawer = ({ isOpen, setIsDrawerOpen, children }) => (\n  <>\n    <NavDrawer\n      className='permanent-drawer'\n    >\n      {children}\n    </NavDrawer>\n    <NavDrawer\n      className='modal-drawer'\n      modal\n      open={isOpen}\n      onOpen={() => setIsDrawerOpen(true)}\n      onClose={() => setIsDrawerOpen(false)}\n    >\n      {children}\n    </NavDrawer>\n    <style jsx>{`\n      @media (min-width: 840px) {\n        .modal-drawer {\n          display: none !important;\n        }\n      }\n      @media (max-width: 839px) {\n        .permanent-drawer {\n          display: none !important;\n        }\n      }\n    `}</style>\n  </>\n)\nDeviceAppropriateDrawer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nexport default DeviceAppropriateDrawer","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'next/router'\nimport getConfig from 'next/config'\nimport List, {\n  ListItem,\n  ListItemGraphic,\n  ListItemText,\n  ListItemMeta,\n} from '@material/react-list'\nimport MaterialIcon from '@material/react-material-icon'\n\nconst { publicRuntimeConfig } = getConfig()\nconst { HOME_ROUTE } = publicRuntimeConfig\n\nconst NAV_LINKS = [\n  {\n    path: '/',\n    icon: 'home',\n    label: 'Home',\n  },\n  {\n    path: '/search',\n    icon: 'search',\n    label: 'Search',\n  },\n  {\n    path: '/settings',\n    icon: 'settings',\n    label: 'Settings',\n    meta: 'meta info',\n  },\n]\n\nclass DrawerList extends Component {\n  componentDidMount() {\n    const { router } = this.props\n    NAV_LINKS.forEach(x => router.prefetch(x.path)) // do not include HOME_ROUTE prefix\n  }\n  render() {\n    const { onItemClick, router } = this.props\n    const selectedIndex = NAV_LINKS.reduce((agg, x, i) => (\n      x.path === router.pathname ? i : agg\n    ), 0)\n    return (\n      <List\n        tag='nav'\n        singleSelection\n        selectedIndex={selectedIndex}\n      >\n        {NAV_LINKS.map(({ path, icon, label, meta }) => (\n          <ListItem\n            tag='a'\n            key={path}\n            href={`${HOME_ROUTE}${path}`}\n            onClick={e => {\n              e.preventDefault()\n              router.push(`${HOME_ROUTE}${path}`)\n              onItemClick()\n            }}\n          >\n            <ListItemGraphic graphic={<MaterialIcon icon={icon}/>} />\n            <ListItemText primaryText={label} />\n            <ListItemMeta meta={meta || ''} />\n          </ListItem>\n        ))}\n      </List>\n    )\n  }\n}\nDrawerList.propTypes = {\n  onItemClick: PropTypes.func.isRequired,\n}\n\nexport default withRouter(DrawerList)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  DrawerHeader,\n  DrawerSubtitle,\n  DrawerTitle,\n  DrawerContent,\n} from '@material/react-drawer'\nimport DrawerList from './DrawerList'\nimport DeviceAppropriateDrawer from './DeviceAppropriateDrawer'\n\nconst Drawer = props => (\n  <DeviceAppropriateDrawer {...props}>\n    <DrawerHeader>\n      <DrawerTitle>\n        Drawer Title\n      </DrawerTitle>\n      <DrawerSubtitle>\n        Drawer Subtitle\n      </DrawerSubtitle>\n    </DrawerHeader>\n    <DrawerContent>\n      <DrawerList\n        onItemClick={() => {\n          props.setIsDrawerOpen && props.setIsDrawerOpen(false)\n        }}\n      />\n    </DrawerContent>\n  </DeviceAppropriateDrawer>\n)\nDrawer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  setIsDrawerOpen: PropTypes.func.isRequired,\n}\n\nexport default Drawer","import AppBar from './AppBar'\nimport Drawer from './Drawer'\nimport { useState } from 'react'\nimport { TopAppBarFixedAdjust } from '@material/react-top-app-bar'\n\nimport useWindowSize from '../../hooks/useWindowSize'\n\nconst Layout = ({ children }) => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  const { innerWidth } = useWindowSize()\n  return (\n    <>\n      <div className='layout-container'>\n        <Drawer\n          isOpen={isDrawerOpen}\n          setIsDrawerOpen={setIsDrawerOpen}\n        />\n        <div className='layout-app-content'>\n          <AppBar\n            setIsDrawerOpen={setIsDrawerOpen}\n          />\n          <TopAppBarFixedAdjust>\n            {innerWidth} innerwidth\n            {children}\n          </TopAppBarFixedAdjust>\n        </div>\n      </div>\n      <style jsx>{`\n        @media (min-width: 840px) {\n          .layout-container {\n            display: flex;\n            flex-direction: row;\n            height: 100vh;\n            overflow: hidden;\n          }\n          .layout-app-content {\n            flex: auto;\n            overflow: auto;\n          }\n        }\n      `}</style>\n    </>\n  )\n}\n\nexport default Layout\n","// import { useState } from 'react'\nimport App, { Container } from 'next/app'\nimport Head from 'next/head'\nimport Layout from '../components/Layout'\n// import { TopAppBarFixedAdjust } from '@material/react-top-app-bar'\nimport '../index.scss'\n\n// import useWindowSize from '../hooks/useWindowSize'\n\n// const Layout = ({ children }) => {\n//   const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n//   const { innerWidth } = useWindowSize()\n//   return (\n//     <div>\n//       <div className='desktop-drawer-container'>\n//         <Drawer\n//           isOpen={isDrawerOpen}\n//           setIsDrawerOpen={setIsDrawerOpen}\n//         />\n//         <div className='desktop-drawer-app-content'>\n//           <AppBar\n//             setIsDrawerOpen={setIsDrawerOpen}\n//           />\n//           <TopAppBarFixedAdjust>\n//             {innerWidth} innerwidth\n//             {children}\n//           </TopAppBarFixedAdjust>\n//         </div>\n//       </div>\n//       <style jsx>{`\n//         @media (min-width: 840px) {\n//           .desktop-drawer-container {\n//             display: flex;\n//             flex-direction: row;\n//             height: 100vh;\n//             overflow: hidden;\n//           }\n//           .desktop-drawer-app-content {\n//             flex: auto;\n//             overflow: auto;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   )\n// }\n\nclass AppLayout extends App {\n  render () {\n    const { Component, pageProps } = this.props\n    return (\n      <Container>\n        <Head>\n          <title>Material Next</title>\n        </Head>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </Container>\n    )\n  }\n}\n\nexport default AppLayout\n"],"mappings":"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","sourceRoot":""}